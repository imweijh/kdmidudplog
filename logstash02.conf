input {
  redis {
    host => "127.0.0.1"
    port => 7379
    data_type => "list"
    key => "logstash"
    threads => 5
  }
}

filter {
#  metrics {
#    flush_interval => 5
#    rates => 1
#    meter => "mevents"   # 总事件=请求+应答
#    add_tag => "mevents"
#    add_tag => "metric"
#  }

#   放在第一个logstash里处理
#   if ([message] =~ /GeneralGwSession/) {
#     drop{} 
#   }

  if [type] == "tdx" {
    grok {
      match => [ "message", "^<134>1 %{TIMESTAMP_ISO8601:lbmtimestamp} %{DATA} \[%{BASE16NUM:session}\] LBM Commit Time:%{INT:lbmtime:int} ms,Call KCBP:\[%{DATA:lbmidIN} %{GREEDYDATA:lbmstr}\]" ]
      match => [ "message", "^<134>1 %{TIMESTAMP_ISO8601:lbmtimestamp} %{DATA} \[%{BASE16NUM:session}\]%{DATA:lbmmsg} \[%{DATA:lbmidOT}\] %{GREEDYDATA:okmsg}" ]
      match => [ "message", "^<134>1 %{TIMESTAMP_ISO8601:lbmtimestamp} %{DATA} \[%{BASE16NUM:session}\]LBM SendErrPack \[%{DATA:errnum}\]%{GREEDYDATA:errmsg}" ]
    }
    date {
      match => [ "lbmtimestamp", "ISO8601" ]
      # timezone => "Asia/Shanghai"
      remove_field => [ "lbmtimestamp" ]
    }

    if [lbmidIN] in ["L0200042","L0200002","L0107011","L0301022","L0302825","L0380205","L0204008","_L0304142","L0102002","L0383477","L0301002","L0200062","L0300016","#L0380305","L0499047","L0300007","L0300162","L0380480","L0204004","L0109433","L0300164","L0106002","L0100001","L0400005","L0107036","L0300302"] {
      drop{}
    }
    
    # 正常返回的消息，不关心，drop
    #if [lbmidOT] {
    #  drop{}
    #}
    
    # if [lbmidOT] in ["L0200042","L0200002","L0107011","L0301022","L0302825","L0380205","L0204008","L0304142","L0102002","L0383477","L0301002","L0200062","L0300016"] {
    #   drop{}
    # }
    
    if [errnum] == "501"    { drop{} }   # 无查询结果,不关心,drop
    if [errnum] == "100010" and [errmsg] =~ /请求已发送/    { drop{} }   # 银证转帐和余额查询
    # if [errnum] == "-99990002" and [errmsg] =~ /Envelope/   { drop{} }   # YG001089 YG001097 签名成功 ca
    
    if [errnum] == "102068" {  # errmsg=="[网关:账户被锁定，请等待[5]秒]." 排除数字干扰
      grok {
        match => [ "errmsg", "^\[%{DATA:errmsg}\[" ]
        overwrite => [ "errmsg" ]
      }
    }

    if [errnum] == "-112" {  # errmsg=="[网关:CRC请求包错[37617326]]." 排除数字干扰
      grok {
        match => [ "errmsg", "^\[%{DATA:errmsg}\[" ]
        overwrite => [ "errmsg" ]
      }
    }
    
    # 错误日志，删除不必要字段，并加tag以写入elasticsearch
    if [errnum] {
      mutate {
        remove_field => ["message","@version"]
        add_tag => [ "elastic" ]
      }
      
      if [errnum] in ["309","304","305","306","313"] {
        mutate {
          add_field => ["lbmidIN","_登录失败_"]
        }
      } 
    }

  #    if [lbmidOT] =~ /.+/ {
  #      mutate {
  #      add_tag => [ "elastic" ]
  #      }
  #    }

    if [lbmidIN] == "L0303001" {
      if [type] == "tdx" {
        kv { source => "lbmstr" field_split => "," value_split => ":" add_tag => [ "elastic" ] }

        if [F_OP_SITE] =~ /^3@/ {
          ruby {
            code => '
              ip1 = event.get("F_OP_SITE")[15..17].to_i.to_s
              ip2 = event.get("F_OP_SITE")[18..20].to_i.to_s
              ip3 = event.get("F_OP_SITE")[21..23].to_i.to_s
              ip4 = event.get("F_OP_SITE")[24..26].to_i.to_s
              event.set("clientip", ip1+"."+ip2+"."+ip3+"."+ip4)
            '
          }
          geoip {
            source => clientip
          }
          mutate {
            remove_field => "[geoip][country_code2]"
            remove_field => "[geoip][country_code3]"
            remove_field => "[geoip][region_code]"
            remove_field => "[geoip][longitude]"
            remove_field => "[geoip][latitude]"
          }
        }

        mutate {
          # add_field => { "lbmtime%{lbmidIN}" => "%{lbmtime}" }
          add_field => { "mktbrd" => "%{MARKET}%{BOARD}"} #合并市场板块字段
          # remove_field => ["lbmtime"]
          # remove_field => ["F_OP_ROLE","MARKET","BOARD","MAC_ADDR","HD_ID","SEAT","MATCH_NUM","MATCH_SEAT","LINK_SECU_ACC","MEETINGSEQ","VID","SIGNED_RNDCODE","TIME_IN_FORCE","BJ_TRD_DATE","AUTO_BUY","MATCHED_SN"]
          remove_field => ["F_OP_ROLE","MARKET","BOARD","MAC_ADDR","HD_ID","MATCH_NUM","MATCH_SEAT","LINK_SECU_ACC","MEETINGSEQ","VID","SIGNED_RNDCODE","TIME_IN_FORCE","BJ_TRD_DATE","AUTO_BUY","MATCHED_SN"]
          update => { "lbmstr" => "%{lbmidIN} %{lbmstr}" }
          remove_field => [ "message" ]
          remove_field => [ "@version" ]
          # remove_field => [ "lbmstr" ]
        }
      }
    } else if [lbmidIN] == "L0409101" {
      if [type] == "tdx" {
        kv { source => "lbmstr" field_split => "," value_split => ":" add_tag => [ "elastic" ] }

        if [F_OP_SITE] =~ /^3@/ {
          ruby {
            code => '
              ip1 = event.get("F_OP_SITE")[15..17].to_i.to_s
              ip2 = event.get("F_OP_SITE")[18..20].to_i.to_s
              ip3 = event.get("F_OP_SITE")[21..23].to_i.to_s
              ip4 = event.get("F_OP_SITE")[24..26].to_i.to_s
              event.set("clientip", ip1+"."+ip2+"."+ip3+"."+ip4)
            '
          }
          geoip {
            source => clientip
          }
          mutate {
            remove_field => "[geoip][country_code2]"
            remove_field => "[geoip][country_code3]"
            remove_field => "[geoip][region_code]"
            remove_field => "[geoip][longitude]"
            remove_field => "[geoip][latitude]"
          }
        }

        mutate {
          # add_field => { "lbmtime%{lbmidIN}" => "%{lbmtime}" }
          # remove_field => ["lbmtime"]
          # remove_field => ["F_OP_ROLE","F_OP_BRANCH","HARDISKSN","CPUSN","CERT","CERT_TYPE","RNDCODE","SIGNED_RNDCODE","ETOKENPIN","DYNETOKEN"]
          remove_field => ["F_OP_ROLE","F_OP_BRANCH","CERT","CERT_TYPE","RNDCODE","SIGNED_RNDCODE","ETOKENPIN","DYNETOKEN"]
          update => { "lbmstr" => "%{lbmidIN} %{lbmstr}" }
          remove_field => [ "message" ]
          remove_field => [ "@version" ]
          # remove_field => [ "lbmstr" ]
        }
      }
    } else if [lbmidIN] == "L0303002" {
      if [type] == "tdx" {
        kv { source => "lbmstr" field_split => "," value_split => ":" add_tag => [ "elastic" ] }

        if [F_OP_SITE] =~ /^3@/ {
          ruby {
            code => '
              ip1 = event.get("F_OP_SITE")[15..17].to_i.to_s
              ip2 = event.get("F_OP_SITE")[18..20].to_i.to_s
              ip3 = event.get("F_OP_SITE")[21..23].to_i.to_s
              ip4 = event.get("F_OP_SITE")[24..26].to_i.to_s
              event.set("clientip", ip1+"."+ip2+"."+ip3+"."+ip4)
            '
          }
          geoip {
            source => clientip
          }
          mutate {
            remove_field => "[geoip][country_code2]"
            remove_field => "[geoip][country_code3]"
            remove_field => "[geoip][region_code]"
            remove_field => "[geoip][longitude]"
            remove_field => "[geoip][latitude]"
          }
        }

        mutate {
          # add_field => { "lbmtime%{lbmidIN}" => "%{lbmtime}" }
          add_field => { "mktbrd" => "%{MARKET}%{BOARD}"} #合并市场板块字段
          # remove_field => ["lbmtime"]
          remove_field => ["F_OP_ROLE","MARKET","BOARD","MAC_ADDR","HD_ID"]
          update => { "lbmstr" => "%{lbmidIN} %{lbmstr}" }
          remove_field => [ "message" ]
          remove_field => [ "@version" ]
          # remove_field => [ "lbmstr" ]
        }
      }
    } else if [lbmidIN] == "L0403001" {
      if [type] == "tdx" {
        kv { source => "lbmstr" field_split => "," value_split => ":" add_tag => [ "elastic" ] }
        mutate {
          # add_field => { "lbmtime%{lbmidIN}" => "%{lbmtime}" }
          # remove_field => ["lbmtime"]
          remove_field => ["F_OP_ROLE","ORDER_VOL"]
          update => { "lbmstr" => "%{lbmidIN} %{lbmstr}" }
          remove_field => [ "message" ]
          remove_field => [ "@version" ]
          # remove_field => [ "lbmstr" ]
        }
      }
    } else if [lbmidIN] == "L0403002" {
      if [type] == "tdx" {
        kv { source => "lbmstr" field_split => "," value_split => ":" add_tag => [ "elastic" ] }
        mutate {
          # add_field => { "lbmtime%{lbmidIN}" => "%{lbmtime}" }
          # remove_field => ["lbmtime"]
          remove_field => ["F_OP_ROLE","REDEEM_FLAG","BOOKING_DATE","ORDER_VOL","TARGET_FUND_CODE"]
          update => { "lbmstr" => "%{lbmidIN} %{lbmstr}" }
          remove_field => [ "message" ]
          remove_field => [ "@version" ]
          # remove_field => [ "lbmstr" ]
        }
      }
    } else if [lbmidIN] == "L0403006" {
      if [type] == "tdx" {
        kv { source => "lbmstr" field_split => "," value_split => ":" add_tag => [ "elastic" ] }
        mutate {
          # add_field => { "lbmtime%{lbmidIN}" => "%{lbmtime}" }
          # remove_field => ["lbmtime"]
          remove_field => ["F_OP_ROLE","ORDER_SN"]
          update => { "lbmstr" => "%{lbmidIN} %{lbmstr}" }
          remove_field => [ "message" ]
          remove_field => [ "@version" ]
          # remove_field => [ "lbmstr" ]
        }
      }
    } else if [lbmidIN] == "L0204001" {
      if [type] == "tdx" {
        kv { source => "lbmstr" field_split => "," value_split => ":" add_tag => [ "elastic" ] }
        mutate {
          # add_field => { "lbmtime%{lbmidIN}" => "%{lbmtime}" }
          # remove_field => ["lbmtime"]
          # remove_field => ["F_OP_ROLE","AUTH_INFO","CERT","EXT_ACC_PWD"]
          remove_field => ["F_OP_ROLE","CERT"]
          update => { "lbmstr" => "%{lbmidIN} %{lbmstr}" }
          remove_field => [ "message" ]
          remove_field => [ "@version" ]
          # remove_field => [ "lbmstr" ]
        }
      }
    } else if [lbmidIN] == "L0204002" {
      if [type] == "tdx" {
        kv { source => "lbmstr" field_split => "," value_split => ":" add_tag => [ "elastic" ] }
        mutate {
          # add_field => { "lbmtime%{lbmidIN}" => "%{lbmtime}" }
          # remove_field => ["lbmtime"]
          remove_field => ["F_OP_ROLE","AUTH_INFO","CERT","EXT_ACC_PWD"]
          update => { "lbmstr" => "%{lbmidIN} %{lbmstr}" }
          remove_field => [ "message" ]
          remove_field => [ "@version" ]
          # remove_field => [ "lbmstr" ]
        }
      }
    } else if [lbmidIN] == "L0401001" {
      if [type] == "tdx" {
        kv { source => "lbmstr" field_split => "," value_split => ":" add_tag => [ "elastic" ] }
        mutate {
          # add_field => { "lbmtime%{lbmidIN}" => "%{lbmtime}" }
          remove_field => ["F_OP_ROLE"]
          update => { "lbmstr" => "%{lbmidIN} %{lbmstr}" }
          remove_field => [ "message" ]
          remove_field => [ "@version" ]
          # remove_field => [ "lbmstr" ]
        }
      }
    } else if [lbmidIN] in ["L0303020","L0300424","L0301014"] { # 最大交易数量和修改成本等其他功能号
      if [type] == "tdx" {
        kv { source => "lbmstr" field_split => "," value_split => ":" add_tag => [ "elastic" ] }
        mutate {
          update => { "lbmstr" => "%{lbmidIN} %{lbmstr}" }
          remove_field => ["F_OP_ROLE"]
          remove_field => [ "message" ]
          remove_field => [ "@version" ]
        }
      }
    } else {
      if [lbmidIN] {
        kv { source => "lbmstr" field_split => "," value_split => ":" include_keys => ["F_OP_USER","F_OP_BRANCH","F_OP_SITE","F_CHANNEL","TRD_TERMCODE"]}
      }
      if "_grokparsefailure" not in [tags] {
        mutate {
          update => { "lbmstr" => "%{lbmidIN} %{lbmstr}" }
          remove_field => ["@version","message"]
        }
      }
    } # lbmidIN 请求具体功能号分析完毕

  } # end if [type] == "tdx"
  
  if [PRICE] {
    mutate {
      convert => { "PRICE" => "float" }
      convert => { "QTY" => "integer" }
    }
  }
  
  # 处理 metric 事件
  #if "metric" in [tags] {
  #  mutate {
  #    remove_field => ["@version","message"]
  #  }
  #}
}

output {
# if "elastic" in [tags] {
  if [type] == "tdx" {
    elasticsearch {
      hosts => ["127.0.0.1:9200"]
      # flush_size => 2000
      idle_flush_time => 5
    }
  }
#  if "metric" in [tags] {
#    elasticsearch {
#      hosts => ["127.0.0.1:9200"]
#      index => "metric-%{+YYYY.MM.dd}"
#      document_type => "metric"
#    }
#  }

#  if "mevents" in [tags] {
#    stdout {
#      codec => line { format => "%{@timestamp}|1m rate: %{[mevents][rate_1m]} | %{[mevents][count]}"}
#    }
#  }

#  if "_grokparsefailure" in [tags] {
#    file {
#      path => "/var/log/logstash/_grokparsefailure.log"
#      codec => rubydebug
#    }
#  }

  udp {
    host => "127.0.0.2"
    port => 5070
  }

  if [lbmidIN] in [ "L0409101" , "_登录失败_" ] {
    udp {
      host => "127.0.0.2"
      port => 5040
    }
  }
#  stdout { codec => rubydebug }
#  stdout { codec => dots }
}
